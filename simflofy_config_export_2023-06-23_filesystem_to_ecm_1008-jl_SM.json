{
  "Connections": [
    {
      "isManageInPlaceSupported": false,
      "scope": "PUBLIC",
      "description": "File system integration",
      "className": "com.simflofy.connectors.filesystem.FilesystemConnector",
      "connectionName": "FileSystemIntegration-jl",
      "id": "63ec1d442baa9efd0ced4077",
      "isRepositorySupported": true,
      "type": "filesystemConnector",
      "isOutputSupported": true
    },
    {
      "authConn": "63d849a007412110c51a1aaf",
      "secondAuthConn": "",
      "isManageInPlaceSupported": true,
      "scope": "PUBLIC",
      "description": "ECM Nexus dev 1008 inte - jl",
      "className": "com.simflofy.connectors.objective.ObjectiveConnector",
      "connectionName": "ECM 1008 Inte-jl",
      "id": "63d84af02baa9efd0cb16553",
      "isRepositorySupported": true,
      "type": "objectiveConnector",
      "isOutputSupported": true
    }
  ],
  "TaskGroups": [],
  "Jobs": [{
    "preProcessors": "{\"tasks\":[]}",
    "auditAllMappings": false,
    "chainJobWaitInterval": "",
    "jobAudit": "MONGO",
    "repositoryTimeZone": "Australia/Sydney",
    "outputTimeZone": "Australia/Sydney",
    "runTaskGroupAfter": false,
    "dbId": "640578362baa9efd0c3fa771",
    "postProcessorThreadsCount": 1,
    "modified": 1687331553793,
    "id": 1678080054062,
    "tasks": "{\"tasks\":[{\"taskInstanceName\":\"Default Override Folder Path Task\",\"beanName\":\"overrideFolderPathTask\",\"taskName\":\"Override Folder Path Task\",\"position\":0,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"'/'\",\"key\":\"jt_folderpath_pattern\"}]},{\"taskInstanceName\":\"Default Hash Value Generator\",\"beanName\":\"hashValueGeneratorTask\",\"taskName\":\"Hash Value Generator\",\"position\":1,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"memory\",\"key\":\"md_hash_staging\"},{\"value\":\"md5\",\"key\":\"hash_algorithm\"}]},{\"taskInstanceName\":\"Default Duplicate Detection\",\"beanName\":\"duplicationCheckTask\",\"taskName\":\"Duplicate Detection\",\"position\":2,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"MD5\",\"key\":\"field_to_compare\"},{\"value\":\"enterprise\",\"key\":\"scope\"},{\"value\":\"skip\",\"key\":\"action\"}]},{\"taskInstanceName\":\"Default PII Detection Task\",\"beanName\":\"PIIDetectionTask\",\"taskName\":\"PII Detection Task\",\"position\":3,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"pii\",\"key\":\"pii_field_to_mark\"},{\"value\":\"true\",\"key\":\"breakup_list\"},{\"value\":\"pii\",\"key\":\"field_prefix\"},{\"value\":\"ALL_PROPS,BINARY\",\"key\":\"pii_what_to_check\"}]},{\"taskInstanceName\":\"Default Tika Extractor Task\",\"beanName\":\"tikaExtractorTask\",\"taskName\":\"Tika Extractor Task\",\"position\":4,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"content\",\"key\":\"tejt_field_to_mark\"},{\"value\":\"0\",\"key\":\"tejt_max_length\"},{\"value\":\"\",\"key\":\"tejt_etp\"},{\"value\":\"true\",\"key\":\"tejt_fail_on_error\"},{\"value\":\"false\",\"key\":\"tejt_rm_bin\"},{\"value\":\"false\",\"key\":\"tejt_sofs\"}]},{\"taskInstanceName\":\"Default Obsolete Detection\",\"beanName\":\"obsoleteCheckTask\",\"taskName\":\"Obsolete Detection\",\"position\":5,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"updated\",\"key\":\"beforeWhen\"},{\"value\":\"5\",\"key\":\"before\"},{\"value\":\"\",\"key\":\"customDate\"},{\"value\":\"log\",\"key\":\"action\"}]},{\"taskInstanceName\":\"Default Trivial Detection\",\"beanName\":\"trivialCheckTask\",\"taskName\":\"Trivial Detection\",\"position\":6,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"true\",\"key\":\"checkBelow\"},{\"value\":\"102400\",\"key\":\"below\"},{\"value\":\"false\",\"key\":\"checkAbove\"},{\"value\":\"\",\"key\":\"above\"},{\"value\":\"true\",\"key\":\"checkExt\"},{\"value\":\"png\",\"key\":\"exts\"},{\"value\":\"false\",\"key\":\"checkType\"},{\"value\":\"\",\"key\":\"types\"},{\"value\":\"log\",\"key\":\"action\"}]},{\"taskInstanceName\":\"Default JavaScript Processing\",\"beanName\":\"javaScriptExecutorTask\",\"taskName\":\"JavaScript Processing\",\"position\":7,\"type\":\"PROCESSOR\",\"fields\":[{\"value\":\"\\n//'let' and 'const' are not supported keywords. \\n//'result' is a reserved variable which is automatically declared \\n//It can be used to pass('c')/fail('f')/skip('s') documents. \\n//If 'result' has no value, the document will pass if no errors occur. \\n//Use the print() method to log information as needed.\\n\\nvar piiPrefix='pii_';\\nvar piiFieldName = 'Australia_Bank_State_Branch_BSB';\\nvar groupAsBoolean=true;\\nvar piiGroupings = \\n{\\n    piiCreditCard: ['credit'],\\n    piiAmerica:['canada', 'us'],\\n    piiAustralia: ['australia']\\n};\\n\\n// the structure we'll put all the pii fields in\\nvar piiJson = {};\\n\\n\\n// ===========================================\\n// rework the map to be by field prefix (quicker to go thru the field list later)\\nvar fieldMappings = {};\\nfor (var coll in piiGroupings){\\n  var flds = piiGroupings[coll];\\n  for (var f=0; f < flds.length; f++)   {\\n      var fld = flds[f];\\n      var map =fieldMappings[fld] || new Array();\\n      map.push(coll);\\n      fieldMappings[fld]= map;\\n  }\\n}\\n// ===========================================\\n//get the PII fields into a JSON structure\\n\\n// if we have the pii field on its own, group them\\n// get all the pii fields and group them\\n//1. create JSON object from semi-json string {key=val,key=val} pattern\\n//  There may be a better way eg can we get the JSON structure directly\\nvar pii = rd.getDocumentField(piiFieldName);\\nif (pii) pii = pii.getFieldValue();\\n\\nif (pii){\\n    // equals to endquote and colon\\n    var tmp  = (''+pii).replaceAll ('=', 'B:');\\n    // commas to comma and startquote\\n    var tmp  = tmp.replaceAll (', ', ',B');\\n    // add first quote if needed\\n    if (tmp!=='{}'){\\n      tmp = tmp.replace ('{', '{B');\\n    }\\n    piiJson = JSON.parse(tmp);\\n}\\nelse{ \\n // builf from the individual fields.\\n var map = rd.getFieldsMap();\\n for (var m in map){\\n    // if its a pii_ field add in without the pii_ prefix\\n    if(m.indexOf (piiPrefix)== 0){\\n      piiJson[m.replace(piiPrefix,'').toLowerCase()] = map[m].getFieldValue();    \\n    }\\n }\\n}\\n\\n// ===========================================\\n// work thru each field and add in if in the groupings\\nprint ('checking pii fields ' + JSON.stringify (piiJson) + 'against groups ' + JSON.stringify (fieldMappings));\\n\\nvar groupsToAdd = {};\\nfor (var p in piiJson){\\n    var val = piiJson[p];\\n    for (var f in fieldMappings){\\n        if(p.indexOf(f) ==0){\\n            var colls = fieldMappings[f];\\n            for (var c=0; c<colls.length; c++){\\n                var coll = colls[c];                \\n                var collValue = groupsToAdd[coll] || 0;\\n                collValue += val;\\n                groupsToAdd[coll] = collValue;\\n            }\\n        }\\n    }    \\n}\\n\\n// ==================================\\n//and finally create the fields\\nfor (var g in groupsToAdd){\\n    val = groupsToAdd[g];\\n    if (groupAsBoolean) {\\n\\t\\t\\t\\t// works\\n\\t\\t\\t\\t// val = val != 0;\\n        // doesn't work\\n\\t\\t\\t\\tval = val>0;\\n    }\\n    rd.addSingleField (g, val);\\n}\\nresult='c';\\n\",\"key\":\"field_javascript\"}]}]}",
    "chainJob": 0,
    "outputName": "ECM 1008 Inte-jl",
    "postProcessors": "{\"tasks\":[]}",
    "created": 1678080054062,
    "processRelationships": false,
    "auditEmptyMapping": false,
    "taskGroupId": 0,
    "includeHash": false,
    "isMIP": false,
    "name": "filesystem to ecm 1008-jl SM",
    "interval": "",
    "connectionName": "FileSystemIntegration-jl",
    "throttle": false,
    "throttleConfiguration": "{\"jobId\":0,\"configMap\":{}}",
    "queueCapacity": 1000,
    "outputSpec": "{\"outputfolderpath\":\"fAC1439890\"}",
    "emailNotify": "NONE",
    "repoThreadCount": 1,
    "scope": "PUBLIC",
    "tagsList": [],
    "startTime": 946704000000,
    "modifiedBy": "admin",
    "jobType": "SIMPLE_MIGRATION",
    "jobMappingId": 1671601190512,
    "docSpec": "{\"paths\":[{\"path\":\"\\\\\\\\dos1234.eng19.ocl\\\\360Testdocs\",\"converttouri\":false,\"fileconfig_processfolders\":false,\"includehidden\":false,\"includeempty\":false}]}",
    "eventConfigurations": "{\"strings\":[]}",
    "taskThreadsCount": 1,
    "historyRetention": "ALWAYS",
    "recordAuditScope": "ALL",
    "includeBinary": true,
    "emailTo": "",
    "mappings": "{\"mappings\":[]}",
    "maxErrors": 0,
    "createdBy": "admin",
    "outputThreadCount": 1,
    "endTime": 1709702400000,
    "batchSize": 0,
    "mappingGroupId": 0
  }],
  "JobMappings": [{
    "auditAllMappings": false,
    "mappings": "{\"mappings\":[{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"TYPE_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"Document\",\"position\":0,\"target\":\"duotAC88\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"ASPECT_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"Document\",\"position\":1,\"target\":\"cAC1428\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"dos.lastmodifiedtime\",\"position\":2,\"target\":\"tAC2002\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"CALCULATED_FIELD\",\"targetType\":\"TEXT\",\"source\":\"'#{rd.id}'\",\"position\":3,\"target\":\"tAC2005\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"CALCULATED_FIELD\",\"targetType\":\"TEXT\",\"source\":\"'#{version.label}'\",\"position\":4,\"target\":\"tAC2007\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"CALCULATED_FIELD\",\"targetType\":\"TEXT\",\"source\":\"'#{rd.uri}'\",\"position\":5,\"target\":\"tAC2004\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"isObsolete\",\"position\":6,\"target\":\"tAC2053\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"obsoleteBefore\",\"position\":7,\"target\":\"tAC2054\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"obsoleteField\",\"position\":8,\"target\":\"tAC2055\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"CHECKBOX\",\"source\":\"isTrivial\",\"position\":9,\"target\":\"tAC2058\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"isTrivial\",\"position\":10,\"target\":\"tAC2057\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"ignoreSizeBelow\",\"position\":11,\"target\":\"tAC2059\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"ignoreSizeAbove\",\"position\":12,\"target\":\"tAC2060\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"ignoreExtensions\",\"position\":13,\"target\":\"tAC2061\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"ignoreDocTypes\",\"position\":14,\"target\":\"tAC2062\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"isDuplicate\",\"position\":15,\"target\":\"tAC2048\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"duplicationParentID\",\"position\":16,\"target\":\"tAC2050\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"duplicationScope\",\"position\":17,\"target\":\"tAC2049\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"duplicationCriteria\",\"position\":18,\"target\":\"tAC2056\"},{\"sourceType\":\"TEXT\",\"watch\":true,\"mappingType\":\"FIELD_MAPPING\",\"targetType\":\"TEXT\",\"source\":\"baseParentID\",\"position\":19,\"target\":\"tAC2065\"}]}",
    "name": "Filesystem to ECM type & user 1008-jl",
    "id": 1671601190512
  }],
  "DiscoveryConnections": [],
  "AuthConns": [{
    "createdBy": "admin",
    "created": 0,
    "name": "ecm nexus 1008 auth",
    "description": "Objective OAuth Connector",
    "modified": 0,
    "typeId": "objectiveOAuthConnector",
    "id": "63d849a007412110c51a1aaf",
    "props": {
      "user_id": "360admin",
      "server_url": "https://ecmteamdev.nexus-dev.objective.com",
      "client_id": "8a6f6484-30ad-4611-b78f-8c03f39c5cc7"
    }
  }],
  "MappingGroups": []
}